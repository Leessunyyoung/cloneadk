{"ast":null,"code":"var _jsxFileName = \"/Users/sunyoung.lee/git/CloneADK-UI/src/components/KeywordCheckTable.tsx\";\nimport { DataGrid } from '@mui/x-data-grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function KeywordCheckTable() {\n  const columns = [{\n    field: 'id',\n    headerName: '신청일',\n    width: 70\n  }, {\n    field: 'firstName',\n    headerName: 'First name',\n    width: 130\n  }, {\n    field: 'lastName',\n    headerName: 'Last name',\n    width: 130\n  }, {\n    field: 'age',\n    headerName: 'Age',\n    type: 'number',\n    width: 90\n  }, {\n    field: 'fullName',\n    headerName: 'Full name',\n    description: 'This column has a value getter and is not sortable.',\n    sortable: false,\n    width: 160,\n    valueGetter: params => `${params.row.firstName || ''} ${params.row.lastName || ''}`\n  }];\n  const rows = [{\n    id: 1,\n    lastName: 'Snow',\n    firstName: 'Jon',\n    age: 35\n  }, {\n    id: 2,\n    lastName: 'Lannister',\n    firstName: 'Cersei',\n    age: 42\n  }, {\n    id: 3,\n    lastName: 'Lannister',\n    firstName: 'Jaime',\n    age: 45\n  }, {\n    id: 4,\n    lastName: 'Stark',\n    firstName: 'Arya',\n    age: 16\n  }, {\n    id: 5,\n    lastName: 'Targaryen',\n    firstName: 'Daenerys',\n    age: null\n  }, {\n    id: 6,\n    lastName: 'Melisandre',\n    firstName: null,\n    age: 150\n  }, {\n    id: 7,\n    lastName: 'Clifford',\n    firstName: 'Ferrara',\n    age: 44\n  }, {\n    id: 8,\n    lastName: 'Frances',\n    firstName: 'Rossini',\n    age: 36\n  }, {\n    id: 9,\n    lastName: 'Roxie',\n    firstName: 'Harvey',\n    age: 65\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 400,\n      width: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: rows,\n      columns: columns,\n      initialState: {\n        pagination: {\n          paginationModel: {\n            page: 0,\n            pageSize: 5\n          }\n        }\n      },\n      pageSizeOptions: [5, 10],\n      checkboxSelection: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_c = KeywordCheckTable;\nvar _c;\n$RefreshReg$(_c, \"KeywordCheckTable\");","map":{"version":3,"names":["DataGrid","jsxDEV","_jsxDEV","KeywordCheckTable","columns","field","headerName","width","type","description","sortable","valueGetter","params","row","firstName","lastName","rows","id","age","style","height","children","initialState","pagination","paginationModel","page","pageSize","pageSizeOptions","checkboxSelection","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sunyoung.lee/git/CloneADK-UI/src/components/KeywordCheckTable.tsx"],"sourcesContent":["import { DataGrid, GridColDef, GridValueGetterParams } from '@mui/x-data-grid';\nexport default function KeywordCheckTable(){\n\n    const columns: GridColDef[] = [\n        { field: 'id', headerName: '신청일', width: 70 },\n        { field: 'firstName', headerName: 'First name', width: 130 },\n        { field: 'lastName', headerName: 'Last name', width: 130 },\n        {\n          field: 'age',\n          headerName: 'Age',\n          type: 'number',\n          width: 90,\n        },\n        {\n          field: 'fullName',\n          headerName: 'Full name',\n          description: 'This column has a value getter and is not sortable.',\n          sortable: false,\n          width: 160,\n          valueGetter: (params: GridValueGetterParams) =>\n            `${params.row.firstName || ''} ${params.row.lastName || ''}`,\n        },\n      ];\n      \n      const rows = [\n        { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },\n        { id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42 },\n        { id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45 },\n        { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },\n        { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\n        { id: 6, lastName: 'Melisandre', firstName: null, age: 150 },\n        { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\n        { id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },\n        { id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\n      ];\n    return(\n        <div style={{ height: 400, width: '100%' }}>\n        <DataGrid\n          rows={rows}\n          columns={columns}\n          initialState={{\n            pagination: {\n              paginationModel: { page: 0, pageSize: 5 },\n            },\n          }}\n          pageSizeOptions={[5, 10]}\n          checkboxSelection\n        />\n      </div>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}