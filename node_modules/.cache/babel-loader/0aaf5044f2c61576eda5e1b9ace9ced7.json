{"ast":null,"code":"var _jsxFileName = \"/Users/sunyoung.lee/git/CloneADK-UI/src/components/KeywordCheckTable.tsx\",\n  _s = $RefreshSig$();\nimport { Button } from '@mui/material';\nimport { siteNo } from '../api/keywordJob';\nimport { useEffect, useState } from 'react';\nimport KeywordRegistStatusList, { KeywordJobStatusMap } from '../constants/KeywordRegistStatusList';\nimport '../CSS/keywordCheckTable.css';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function KeywordCheckTable() {\n  _s();\n  const columns = [{\n    field: 'createdAt',\n    headerName: '신청일',\n    width: 150,\n    headerAlign: 'center'\n  }, {\n    field: 'mediaName',\n    headerName: '광고상품',\n    width: 150\n  }, {\n    field: 'type',\n    headerName: '작업구분',\n    width: 130\n  }, {\n    field: 'name',\n    headerName: '작업명',\n    width: 150\n  }, {\n    field: 'status',\n    headerName: '작업상태',\n    width: 100\n  }, {\n    field: 'startAt',\n    headerName: '수행시작',\n    width: 150,\n    headerAlign: 'center'\n  }, {\n    field: 'endAt',\n    headerName: '수행종료',\n    width: 150,\n    headerAlign: 'center'\n  }, {\n    field: 'registfile',\n    headerName: '등록파일',\n    width: 100,\n    renderCell: params => /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      color: \"error\",\n      children: \"\\uB2E4\\uC6B4\\uB85C\\uB4DC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }, this),\n    headerAlign: 'center'\n  }, {\n    field: 'fileresult',\n    headerName: '결과',\n    width: 100,\n    renderCell: params => /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      color: \"error\",\n      children: \"\\uB2E4\\uC6B4\\uB85C\\uB4DC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }, this),\n    headerAlign: 'center'\n  }, {\n    field: 'waitcancel',\n    headerName: '대기취소',\n    width: 100,\n    renderCell: params => /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      disabled: true,\n      children: \"\\uCDE8\\uC18C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }, this)\n  }, {\n    field: 'createdBy',\n    headerName: '요청자',\n    width: 150\n  }];\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await siteNo();\n        const users = response.data;\n        console.log(users);\n        const contents = users.content;\n        console.log(contents);\n        const getStatusText = status => {\n          const matchedStatus = KeywordJobStatusMap[status];\n          return matchedStatus ? matchedStatus.text : \"\";\n        };\n        const processedData = contents.map(item => {\n          const statusText = getStatusText(item.status);\n          const formattedStatus = item.createdAt ? item.createdAt.replace('T', ' ') : '';\n          const startText = item.startAt ? item.startAt.replace('T', ' ') : '';\n          const endText = item.endAt ? item.endAt.replace('T', '') : '';\n          const matchedtype = KeywordRegistStatusList.find(status => status.value === item.type);\n          const typeText = matchedtype ? matchedtype.text : \"\";\n          return {\n            createdAt: formattedStatus,\n            mediaName: item.mediaName,\n            type: typeText,\n            name: item.name,\n            status: statusText,\n            startAt: startText,\n            endAt: endText,\n            fileName: item.keywordJobNo,\n            createdBy: item.createdBy\n          };\n        });\n        setData(processedData);\n      } catch (error) {\n        console.error('삐빅삐빅 에러입니다:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 600,\n      width: '93%',\n      marginLeft: '45px'\n    },\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: data.map((item, index) => ({\n        ...item,\n        id: index\n      })),\n      columns: columns,\n      initialState: {\n        pagination: {\n          paginationModel: {\n            page: 0,\n            pageSize: 10\n          }\n        }\n      },\n      autoHeight: true,\n      sx: {\n        p: 2,\n        boxShadow: 2,\n        border: 1,\n        borderColor: 'primary.light',\n        '& .MuiDataGrid-cell:hover': {\n          color: 'primary.main'\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }, this);\n}\n_s(KeywordCheckTable, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = KeywordCheckTable;\nvar _c;\n$RefreshReg$(_c, \"KeywordCheckTable\");","map":{"version":3,"names":["Button","siteNo","useEffect","useState","KeywordRegistStatusList","KeywordJobStatusMap","DataGrid","jsxDEV","_jsxDEV","KeywordCheckTable","_s","columns","field","headerName","width","headerAlign","renderCell","params","variant","color","children","fileName","_jsxFileName","lineNumber","columnNumber","disabled","data","setData","fetchData","response","users","console","log","contents","content","getStatusText","status","matchedStatus","text","processedData","map","item","statusText","formattedStatus","createdAt","replace","startText","startAt","endText","endAt","matchedtype","find","value","type","typeText","mediaName","name","keywordJobNo","createdBy","error","style","height","marginLeft","rows","index","id","initialState","pagination","paginationModel","page","pageSize","autoHeight","sx","p","boxShadow","border","borderColor","_c","$RefreshReg$"],"sources":["/Users/sunyoung.lee/git/CloneADK-UI/src/components/KeywordCheckTable.tsx"],"sourcesContent":["\nimport { Button } from '@mui/material';\nimport {siteNo} from '../api/keywordJob'\nimport { useEffect, useState } from 'react';\nimport KeywordRegistStatusList, { KeywordJobStatusMap } from '../constants/KeywordRegistStatusList';\nimport '../CSS/keywordCheckTable.css'\nimport { DataGrid,GridCellParams,GridColDef } from '@mui/x-data-grid';\n\n\nexport default function KeywordCheckTable(){\n    \n    interface DataItem{\n        createdAt: string,\n        mediaName: string,\n        type: string,\n        name: string,\n        status: string,\n        startAt:string,\n        endAt:string,\n        fileName:string,\n        createdBy:string,\n    }\n    const columns: GridColDef[] = [\n        { field: 'createdAt', headerName: '신청일', width: 150,headerAlign: 'center',},\n        { field: 'mediaName', headerName: '광고상품', width: 150 },\n        { field: 'type', headerName: '작업구분', width: 130},\n        { field: 'name', headerName: '작업명', width: 150 },\n        { field: 'status', headerName: '작업상태', width: 100},\n        { field: 'startAt', headerName: '수행시작', width: 150 ,headerAlign: 'center'},\n        { field: 'endAt', headerName: '수행종료', width: 150 ,headerAlign: 'center'},\n        {\n            field: 'registfile',\n            headerName: '등록파일',\n            width: 100,\n            renderCell: (params: GridCellParams) => (\n              <Button variant=\"outlined\" color=\"error\">\n                다운로드\n              </Button>\n            ),\n            headerAlign: 'center'\n          },\n          {\n            field: 'fileresult',\n            headerName: '결과',\n            width: 100,\n            renderCell: (params: GridCellParams) => (\n              <Button variant=\"outlined\" color=\"error\">\n                다운로드\n              </Button>\n            ),\n            headerAlign: 'center'\n          },\n          {\n            field: 'waitcancel',\n            headerName: '대기취소',\n            width: 100,\n            renderCell: (params: GridCellParams) => (\n              <Button variant=\"contained\" disabled>\n                취소\n              </Button>\n            ),\n          },\n        { field: 'createdBy', headerName: '요청자', width: 150 },\n      ];\n\n    const [data, setData] = useState<DataItem[]>([]);\n    useEffect(() => {\n        const fetchData = async () => {\n          try {\n            const response = await siteNo()\n            const users: any = response.data;\n            console.log(users);\n            const contents: any[] = users.content;\n            console.log(contents);\n            const getStatusText = (status: string): string => {\n                const matchedStatus = KeywordJobStatusMap[status];\n                return matchedStatus ? matchedStatus.text : \"\";\n              };\n            const processedData = contents.map((item: any) => {\n                const statusText = getStatusText(item.status);\n                const formattedStatus = item.createdAt ? item.createdAt.replace('T', ' ') : '';\n                const startText = item.startAt ? item.startAt.replace('T',' ') : '';\n                const endText = item.endAt ? item.endAt.replace('T','') : '';\n                const matchedtype = KeywordRegistStatusList.find(\n                  (status) => status.value === item.type\n                );\n                const typeText = matchedtype ? matchedtype.text : \"\"; \n                return {\n                  createdAt: formattedStatus,\n                  mediaName: item.mediaName,\n                  type: typeText,\n                  name: item.name,\n                  status: statusText,\n                  startAt: startText,\n                  endAt: endText,\n                  fileName: item.keywordJobNo,\n                  createdBy: item.createdBy,\n                };\n              });\n\n              setData(processedData);\n          } catch (error) {\n            console.error('삐빅삐빅 에러입니다:', error);\n          }\n        };\n        fetchData();\n      }, []);\n    \n    return(\n        <div style={{ height: 600, width: '93%',marginLeft:'45px'}}>\n                <DataGrid\n                    rows={data.map((item, index) => ({ ...item, id: index }))}\n                    columns={columns}\n                    initialState={{\n                        pagination: {\n                          paginationModel: { page: 0, pageSize: 10 },\n                        },\n                      }}\n                      autoHeight\n                      sx={{\n                        p:2,\n                        boxShadow: 2,\n                        border: 1,\n                        borderColor: 'primary.light',\n                        '& .MuiDataGrid-cell:hover': {\n                          color: 'primary.main',\n                        },\n                      }}\n                    />\n      </div>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}