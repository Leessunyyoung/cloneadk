{"ast":null,"code":"var _jsxFileName = \"/Users/sunyoung.lee/git/CloneADK-UI/src/components/Test.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\n\n// 1.export type을 쓸려면 export type TableDataType = TableDataTypeItem[];이거써야댐\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TableData() {\n  _s();\n  // 테이블 데이터 상태 관리\n  const [tableData, setTableData] = useState([]);\n  useEffect(() => {\n    // 데이터 가져오기 함수\n    const fetchData = async () => {\n      try {\n        // API 호출하여 데이터 가져오기\n        const response = await axios.get('/kj?size=10&siteNo=6');\n        const data = response.data;\n\n        // 가져온 데이터를 테이블 데이터 형식에 맞게 가공\n        const tableData = data.content.map(item => ({\n          createdAt: item.createdAt,\n          mediaName: item.mediaName,\n          type: item.type,\n          name: item.name,\n          status: item.status,\n          startAt: item.startAt,\n          endAt: item.endAt,\n          createdBy: item.createdBy,\n          keywordJobNo: item.keywordJobNo\n        }));\n\n        // 가공한 테이블 데이터 상태 업데이트\n        setTableData(tableData);\n        console.log(tableData);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    // 컴포넌트 마운트 시 데이터 가져오기 함수 호출\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: tableData.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: item.createdAt\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(TableData, \"qcVQMfdRY2vxgSp5dutEfuJRk7k=\");\n_c = TableData;\nvar _c;\n$RefreshReg$(_c, \"TableData\");","map":{"version":3,"names":["useEffect","useState","axios","jsxDEV","_jsxDEV","TableData","_s","tableData","setTableData","fetchData","response","get","data","content","map","item","createdAt","mediaName","type","name","status","startAt","endAt","createdBy","keywordJobNo","console","log","error","children","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sunyoung.lee/git/CloneADK-UI/src/components/Test.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport axios from 'axios';\n\n// 1.export type을 쓸려면 export type TableDataType = TableDataTypeItem[];이거써야댐\nexport type TableDataTypeItem = {\n  createdAt: string;\n  mediaName: string;\n  type: string;\n  name: string;\n  status: string;\n  startAt: string;\n  endAt: string;\n  createdBy: string;\n  keywordJobNo: number;\n};\nexport type TableDataType = TableDataTypeItem[];\n\nexport default function TableData() {\n  // 테이블 데이터 상태 관리\n  const [tableData, setTableData] = useState<TableDataType[]>([]);\n\n  useEffect(() => {\n    // 데이터 가져오기 함수\n    const fetchData = async () => {\n      try {\n        // API 호출하여 데이터 가져오기\n        const response = await axios.get('/kj?size=10&siteNo=6');\n        const data = response.data;\n\n        // 가져온 데이터를 테이블 데이터 형식에 맞게 가공\n        const tableData: TableDataType = data.content.map((item: any) => ({\n          createdAt: item.createdAt,\n          mediaName: item.mediaName,\n          type: item.type,\n          name: item.name,\n          status: item.status,\n          startAt: item.startAt,\n          endAt: item.endAt,\n          createdBy: item.createdBy,\n          keywordJobNo: item.keywordJobNo,\n        }));\n\n        // 가공한 테이블 데이터 상태 업데이트\n        setTableData(tableData);\n        console.log(tableData);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    // 컴포넌트 마운트 시 데이터 가져오기 함수 호출\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      {tableData.map((item, index) => (\n        <div key={index}>{item.createdAt}</div>\n      ))}\n    </div>\n  )\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAcA,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAkB,EAAE,CAAC;EAE/DD,SAAS,CAAC,MAAM;IACd;IACA,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,sBAAsB,CAAC;QACxD,MAAMC,IAAI,GAAGF,QAAQ,CAACE,IAAI;;QAE1B;QACA,MAAML,SAAwB,GAAGK,IAAI,CAACC,OAAO,CAACC,GAAG,CAAEC,IAAS,KAAM;UAChEC,SAAS,EAAED,IAAI,CAACC,SAAS;UACzBC,SAAS,EAAEF,IAAI,CAACE,SAAS;UACzBC,IAAI,EAAEH,IAAI,CAACG,IAAI;UACfC,IAAI,EAAEJ,IAAI,CAACI,IAAI;UACfC,MAAM,EAAEL,IAAI,CAACK,MAAM;UACnBC,OAAO,EAAEN,IAAI,CAACM,OAAO;UACrBC,KAAK,EAAEP,IAAI,CAACO,KAAK;UACjBC,SAAS,EAAER,IAAI,CAACQ,SAAS;UACzBC,YAAY,EAAET,IAAI,CAACS;QACrB,CAAC,CAAC,CAAC;;QAEH;QACAhB,YAAY,CAACD,SAAS,CAAC;QACvBkB,OAAO,CAACC,GAAG,CAACnB,SAAS,CAAC;MACxB,CAAC,CAAC,OAAOoB,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;;IAED;IACAlB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAwB,QAAA,EACGrB,SAAS,CAACO,GAAG,CAAC,CAACC,IAAI,EAAEc,KAAK,kBACzBzB,OAAA;MAAAwB,QAAA,EAAkBb,IAAI,CAACC;IAAS,GAAtBa,KAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAuB,CACvC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAC3B,EAAA,CA5CuBD,SAAS;AAAA6B,EAAA,GAAT7B,SAAS;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}